import maya.cmds as mc
Shoulder = (0,0,-3)
Elbow = (-1,0,0)
Wrist = (0,0,3)
Palm = (0,0,4)
jointPlacementListARMS = [Shoulder,Elbow,Wrist,Palm]
IKFKjointList = ['fk_shldr_constraint.ik_shldr_jntW0','fk_elbow_constraint.ik_elbow_jntW0','fk_wrist_constraint.ik_wrist_jntW0','fk_shldr_constraint.fk_shldr_jntW1','fk_elbow_constraint.fk_elbow_jntW1','fk_wrist_constraint.fk_wrist_jntW1']
curvesList = ["curve1", "curve2", "curve3", "curve4", "curve5", "curve6", "curve7", "curve8", "curve9", "curve10", "curve11"]
#creating the initial joints for the arm
mc.joint(name = 'primary_shldrOffset_jnt', position = jointPlacementListARMS[0])
mc.joint(name = 'primary_elbowOffset_jnt', position = jointPlacementListARMS[1])
mc.joint( 'primary_shldrOffset_jnt', e = True, zso = True, orientJoint = 'xyz', sao = 'yup' )
mc.joint(name = 'primary_wristOffset_jnt', position = jointPlacementListARMS[2])
mc.joint( 'primary_elbowOffset_jnt', e = True, zso = True, orientJoint = 'xyz', sao = 'yup' )
mc.joint(name = 'primary_palmOffset_jnt', position = jointPlacementListARMS[3])
mc.joint( 'primary_wristOffset_jnt', e = True, zso = True, orientJoint = 'xyz', sao = 'yup' )
mc.select(deselect = True)

#Creating the FK Joints
mc.duplicate(['primary_shldrOffset_jnt'], renameChildren = True, name = 'fk_shldr_jnt')
mc.rename('primary_elbowOffset_jnt1','fk_elbow_jnt')
mc.rename('primary_wristOffset_jnt1','fk_wrist_jnt')
mc.delete('primary_palmOffset_jnt1')

#Creating the IK Joints
mc.duplicate(['primary_shldrOffset_jnt'], renameChildren = True, name = 'ik_shldr_jnt')
mc.rename('primary_elbowOffset_jnt1','ik_elbow_jnt')
mc.rename('primary_wristOffset_jnt1','ik_wrist_jnt')
mc.delete('primary_palmOffset_jnt1')

#Nesting the Skin Joints
mc.select('primary_shldrOffset_jnt')
mc.joint(name = 'primary_shldr_skinJnt', position = (0,0,-3))
mc.joint('primary_shldr_skinJnt', e = True, zso = True, orientJoint = 'xyz', sao = 'yup')
mc.select(deselect = True)
mc.select('primary_elbowOffset_jnt')
mc.joint(name = 'primary_elbow_skinJnt', position = (-1,0,0))
mc.joint('primary_elbow_skinJnt', e = True, zso = True, orientJoint = 'xyz', sao = 'yup')
mc.select(deselect = True)
mc.select('primary_wristOffset_jnt')
mc.joint(name = 'primary_wrist_skinJnt', position = (0,0,3))
mc.joint('primary_wrist_skinJnt', e = True, zso = True, orientJoint = 'xyz', sao = 'yup')
mc.select(deselect = True)

#Constraining the IK and FK joints to the Skin joints
mc.parentConstraint('ik_shldr_jnt','primary_shldrOffset_jnt', name = 'ik_shldr_constraint', maintainOffset = True, weight = 1)
mc.parentConstraint('ik_elbow_jnt','primary_elbowOffset_jnt', name = 'ik_elbow_constraint', maintainOffset = True, weight = 1)
mc.parentConstraint('ik_wrist_jnt','primary_wristOffset_jnt', name = 'ik_wrist_constraint', maintainOffset = True, weight = 1)
mc.parentConstraint('fk_shldr_jnt','primary_shldrOffset_jnt', name = 'fk_shldr_constraint', maintainOffset = True, weight = 0)
mc.parentConstraint('fk_elbow_jnt','primary_elbowOffset_jnt', name = 'fk_elbow_constraint', maintainOffset = True, weight = 0)
mc.parentConstraint('fk_wrist_jnt','primary_wristOffset_jnt', name = 'fk_wrist_constraint', maintainOffset = True, weight = 0)

#IK handle creation
mc.ikHandle(name = 'ikArmHandle', startJoint = 'ik_shldr_jnt', endEffector = 'ik_wrist_jnt', solver = 'ikRPsolver')

#Creating FK Controllers
mc.circle(name = 'fk_shldr_ctrl',normal = (1,0,0))
mc.parent('fk_shldr_ctrlShape', 'fk_shldr_jnt', relative = True, shape = True)
mc.circle(name = 'fk_elbow_ctrl',normal = (1,0,0))
mc.parent('fk_elbow_ctrlShape', 'fk_elbow_jnt', relative = True, shape = True)
mc.circle(name = 'fk_wrist_ctrl',normal = (1,0,0))
mc.parent('fk_wrist_ctrlShape', 'fk_wrist_jnt', relative = True, shape = True)
mc.delete('fk_shldr_ctrl','fk_elbow_ctrl','fk_wrist_ctrl')

#Creating IK Wrist Controller
mc.circle(name = 'ik_wrist_ctrl',normal = (0,1,0))
mc.circle(name = 'ik_wrist_ctrl1',normal = (1,0,0))
mc.circle(name = 'ik_wrist_ctrl2',normal = (0,0,1))
mc.parent('ik_wrist_ctrl1Shape', 'ik_wrist_ctrl', relative = True, shape = True)
mc.parent('ik_wrist_ctrl2Shape', 'ik_wrist_ctrl', relative = True, shape = True)
mc.delete('ik_wrist_ctrl1','ik_wrist_ctrl2')
mc.group('ik_wrist_ctrl', name = 'ik_wrist_ctrl_grp')
mc.move(Wrist[0],Wrist[1],Wrist[2], 'ik_wrist_ctrl_grp')

mc.parentConstraint('ik_wrist_ctrl', 'ikArmHandle', name = 'ik_wrist_ctrl_constraint', maintainOffset = True, weight = 1)

"""Locking the extra Wrist Controller Attributes"""
mc.setAttr('ik_wrist_ctrl.rx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl.ry', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl.rz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl.sx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl.sy', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl.sz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.rx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.ry', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.rz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.sx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.sy', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.sz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.tx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.ty', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_wrist_ctrl_grp.tz', lock= True, keyable = False, channelBox= False)

mc.circle(name = 'ik_elbow_ctrl',normal = (0,1,0))
mc.circle(name = 'ik_elbow_ctrl1',normal = (1,0,0))
mc.circle(name = 'ik_elbow_ctrl2',normal = (0,0,1))
mc.parent('ik_elbow_ctrl1Shape', 'ik_elbow_ctrl', relative = True, shape = True)
mc.parent('ik_elbow_ctrl2Shape', 'ik_elbow_ctrl', relative = True, shape = True)
mc.delete('ik_elbow_ctrl1','ik_elbow_ctrl2')
mc.group('ik_elbow_ctrl', name = 'ik_elbow_ctrl_grp')
mc.move(-3,0,0, 'ik_elbow_ctrl_grp')

mc.poleVectorConstraint('ik_elbow_ctrl','ikArmHandle', name = 'ik_elbowPoleVector_constraint', weight = 1)

"""Locking the Extra Elbow Controller Attributes"""
mc.setAttr('ik_elbow_ctrl.rx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl.ry', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl.rz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl.sx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl.sy', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl.sz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.rx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.ry', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.rz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.sx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.sy', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.sz', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.tx', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.ty', lock= True, keyable = False, channelBox= False)
mc.setAttr('ik_elbow_ctrl_grp.tz', lock= True, keyable = False, channelBox= False)
#Kinematics Controller
mc.textCurves( font = 'Times New Roman|wt:50|sz:28', text = 'IK/FK')
mc.rename( curvesList[0],'ik_fk_Ctrl')
mc.rename( curvesList[1],'ik_fk_Ctrl1')
mc.rename( curvesList[2],'ik_fk_Ctrl2')
mc.rename( curvesList[3],'ik_fk_Ctrl3')
mc.rename( curvesList[4],'ik_fk_Ctrl4')
#Kinematic Switch Outliner Cleanup
mc.rename('Text_IKxFK_1', 'ik_fk_GRP0')
mc.rename('Char_I_1', 'ik_fk_GRP')
mc.parent('ik_fk_Ctrl1','ik_fk_GRP')
mc.parent('ik_fk_Ctrl2','ik_fk_GRP')
mc.parent('ik_fk_Ctrl3','ik_fk_GRP')
mc.parent('ik_fk_Ctrl4','ik_fk_GRP')
mc.select('ik_fk_Ctrl1', replace = True)
mc.select('ik_fk_Ctrl2', add = True)
mc.select('ik_fk_Ctrl3', add = True)
mc.select('ik_fk_Ctrl4', add = True)
mc.select('Char_K_1', add = True)
mc.select('Char_x_1', add = True)
mc.select('Char_F_1', add = True)
mc.select('Char_K_2', add = True)
mc.FreezeTransformations()
mc.parent('ik_fk_CtrlShape1', 'ik_fk_Ctrl', relative = True, shape = True)
mc.parent('ik_fk_CtrlShape2', 'ik_fk_Ctrl', relative = True, shape = True)
mc.parent('ik_fk_CtrlShape3', 'ik_fk_Ctrl', relative = True, shape = True)
mc.parent('ik_fk_CtrlShape4', 'ik_fk_Ctrl', relative = True, shape = True)
mc.select('ik_fk_Ctrl1', replace = True)
mc.select('ik_fk_Ctrl2', add = True)
mc.select('ik_fk_Ctrl3', add = True)
mc.select('ik_fk_Ctrl4', add = True)
mc.select('Char_K_1', add = True)
mc.select('Char_x_1', add = True)
mc.select('Char_F_1', add = True)
mc.select('Char_K_2', add = True)
mc.delete()
mc.select('ik_fk_Ctrl')
#Kinematics Switch
mc.addAttr(longName = 'ik', attributeType = 'bool', keyable = True)
mc.connectAttr('ik_fk_Ctrl.ik', IKFKjointList[0])
mc.connectAttr('ik_fk_Ctrl.ik', IKFKjointList[1])
mc.connectAttr('ik_fk_Ctrl.ik', IKFKjointList[2])
mc.createNode('blendColors', name = 'fk_switch')
mc.setAttr("fk_switch.color2G", 1)
mc.setAttr("fk_switch.color2R", 1)
mc.setAttr("fk_switch.color1R", 0)
mc.setAttr("fk_switch.blender", 0)
mc.connectAttr('fk_switch.output.outputR', IKFKjointList[3])
mc.connectAttr('fk_switch.output.outputG', IKFKjointList[4])
mc.connectAttr('fk_switch.output.outputB', IKFKjointList[5])
mc.connectAttr('ik_fk_Ctrl.ik', 'fk_switch.blender')
